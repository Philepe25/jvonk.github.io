<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="https://matterdark.github.io//feed.xml" rel="self" type="application/atom+xml" /><link href="https://matterdark.github.io//" rel="alternate" type="text/html" /><updated>2018-11-29T23:45:01+00:00</updated><id>https://matterdark.github.io//feed.xml</id><title type="html">Johan Vonk’s Website</title><subtitle>My personal static website created using Github Pages, Markdown, and Jekyll</subtitle><entry><title type="html">Overview</title><link href="https://matterdark.github.io//portfolio/2018/11/24/overview.html" rel="alternate" type="text/html" title="Overview" /><published>2018-11-24T00:00:00+00:00</published><updated>2018-11-24T00:00:00+00:00</updated><id>https://matterdark.github.io//portfolio/2018/11/24/overview</id><content type="html" xml:base="https://matterdark.github.io//portfolio/2018/11/24/overview.html">&lt;video controls=&quot;&quot;&gt;&lt;source src=&quot;https://coertvonk.com/wp-content/shield/a0f6-579d/8dadafd0a2a5752d825a90a18ec8f434.mp4&quot; type=&quot;video/mp4&quot;&gt;&lt;/video&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Stamps</title><link href="https://matterdark.github.io//usaco/2018/11/08/fact4.html" rel="alternate" type="text/html" title="Stamps" /><published>2018-11-08T00:00:00+00:00</published><updated>2018-11-08T00:00:00+00:00</updated><id>https://matterdark.github.io//usaco/2018/11/08/fact4</id><content type="html" xml:base="https://matterdark.github.io//usaco/2018/11/08/fact4.html">&lt;p&gt;Given a set of N stamp values (e.g., {1 cent, 3 cents}) and an upper limit K to the number of stamps that can fit on an envelope, calculate the largest unbroken list of postages from 1 cent to M cents that can be created.&lt;/p&gt;

&lt;p&gt;For example, consider stamps whose values are limited to 1 cent and 3 cents; you can use at most 5 stamps. It’s easy to see how to assemble postage of 1 through 5 cents (just use that many 1 cent stamps), and successive values aren’t much harder:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;6 = 3 + 3&lt;/li&gt;
  &lt;li&gt;7 = 3 + 3 + 1&lt;/li&gt;
  &lt;li&gt;8 = 3 + 3 + 1 + 1&lt;/li&gt;
  &lt;li&gt;9 = 3 + 3 + 3&lt;/li&gt;
  &lt;li&gt;10 = 3 + 3 + 3 + 1&lt;/li&gt;
  &lt;li&gt;11 = 3 + 3 + 3 + 1 + 1&lt;/li&gt;
  &lt;li&gt;12 = 3 + 3 + 3 + 3&lt;/li&gt;
  &lt;li&gt;13 = 3 + 3 + 3 + 3 + 1.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;However, there is no way to make 14 cents of postage with 5 or fewer stamps of value 1 and 3 cents. Thus, for this set of two stamp values and a limit of K=5, the answer is M=13.&lt;/p&gt;

&lt;p&gt;The most difficult test case for this problem has a time limit of 3 seconds.&lt;/p&gt;

&lt;h3 id=&quot;program-name-stamps&quot;&gt;PROGRAM NAME: stamps&lt;/h3&gt;

&lt;h3 id=&quot;input-format&quot;&gt;INPUT FORMAT&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Line 1:&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Two integers K and N. K (1 &amp;lt;= K &amp;lt;= 200) is the total number of stamps that can be used. N (1 &amp;lt;= N &amp;lt;= 50) is the number of stamp values.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Line 2..end:&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;N integers, 15 per line, listing all of the N stamp values, each of which will be at most 10000.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;sample-input-file-stampsin&quot;&gt;SAMPLE INPUT (file stamps.in)&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;5 2
1 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;output-format&quot;&gt;OUTPUT FORMAT&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Line 1:&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;One integer, the number of contiguous postage values starting at 1 cent that can be formed using no more than K stamps from the set.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;sample-output-file-stampsout&quot;&gt;SAMPLE OUTPUT (file stamps.out)&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;13
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">Given a set of N stamp values (e.g., {1 cent, 3 cents}) and an upper limit K to the number of stamps that can fit on an envelope, calculate the largest unbroken list of postages from 1 cent to M cents that can be created.</summary></entry><entry><title type="html">Score Inflation</title><link href="https://matterdark.github.io//usaco/2018/11/07/inflate.html" rel="alternate" type="text/html" title="Score Inflation" /><published>2018-11-07T00:00:00+00:00</published><updated>2018-11-07T00:00:00+00:00</updated><id>https://matterdark.github.io//usaco/2018/11/07/inflate</id><content type="html" xml:base="https://matterdark.github.io//usaco/2018/11/07/inflate.html">&lt;p&gt;The more points students score in our contests, the happier we here at the USACO are. We try to design our contests so that people can score as many points as possible, and would like your assistance.&lt;/p&gt;

&lt;p&gt;We have several categories from which problems can be chosen, where a “category” is an unlimited set of contest problems which all require the same amount of time to solve and deserve the same number of points for a correct solution. Your task is write a program which tells the USACO staff how many problems from each category to include in a contest so as to maximize the total number of points in the chosen problems while keeping the total solution time within the length of the contest.&lt;/p&gt;

&lt;p&gt;The input includes the length of the contest, M (1 &amp;lt;= M &amp;lt;= 10,000) (don’t worry, you won’t have to compete in the longer contests until training camp) and N, the number of problem categories, where 1 &amp;lt;= N &amp;lt;= 10,000.&lt;/p&gt;

&lt;p&gt;Each of the subsequent N lines contains two integers describing a category: the first integer tells the number of points a problem from that category is worth (1 &amp;lt;= points &amp;lt;= 10000); the second tells the number of minutes a problem from that category takes to solve (1 &amp;lt;= minutes &amp;lt;= 10000).&lt;/p&gt;

&lt;p&gt;Your program should determine the number of problems we should take from each category to make the highest-scoring contest solvable within the length of the contest. Remember, the number from any category can be any nonnegative integer (0, one, or many). Calculate the maximum number of possible points.&lt;/p&gt;

&lt;h3 id=&quot;program-name-inflate&quot;&gt;PROGRAM NAME: inflate&lt;/h3&gt;

&lt;h3 id=&quot;input-format&quot;&gt;INPUT FORMAT&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Lines 1:&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;M, N – contest minutes and number of problem classes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Line 2..N+1:&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Two integers: the points and minutes for each class&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;sample-input-file-inflatein&quot;&gt;SAMPLE INPUT (file inflate.in)&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;300 4
100 60
250 120
120 100
35 20
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;output-format&quot;&gt;OUTPUT FORMAT&lt;/h3&gt;

&lt;p&gt;A single line with the maximum number of points possible given the constraints.&lt;/p&gt;

&lt;h3 id=&quot;sample-output-file-inflateout&quot;&gt;SAMPLE OUTPUT (file inflate.out)&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;605
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;(Take two problems from #2 and three from #4.)&lt;/em&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">The more points students score in our contests, the happier we here at the USACO are. We try to design our contests so that people can score as many points as possible, and would like your assistance.</summary></entry><entry><title type="html">Contact</title><link href="https://matterdark.github.io//usaco/2018/11/06/contact.html" rel="alternate" type="text/html" title="Contact" /><published>2018-11-06T01:00:00+00:00</published><updated>2018-11-06T01:00:00+00:00</updated><id>https://matterdark.github.io//usaco/2018/11/06/contact</id><content type="html" xml:base="https://matterdark.github.io//usaco/2018/11/06/contact.html">&lt;p&gt;The cows have developed a new interest in scanning the universe outside their farm with radiotelescopes. Recently, they noticed a very curious microwave pulsing emission sent right from the centre of the galaxy. They wish to know if the emission is transmitted by some extraterrestrial form of intelligent life or if it is nothing but the usual heartbeat of the stars.&lt;/p&gt;

&lt;p&gt;Help the cows to find the Truth by providing a tool to analyze bit patterns in the files they record. They are seeking bit patterns of length &lt;strong&gt;A&lt;/strong&gt; through &lt;strong&gt;B&lt;/strong&gt; inclusive (1 &amp;lt;= A &amp;lt;= B &amp;lt;= 12) that repeat themselves most often in each day’s data file. An input limit tells how many of the most frequent patterns to output.&lt;/p&gt;

&lt;p&gt;Pattern occurrences may overlap, and only patterns that occur at least once are taken into account.&lt;/p&gt;

&lt;h3 id=&quot;program-name-contact&quot;&gt;PROGRAM NAME: contact&lt;/h3&gt;

&lt;h3 id=&quot;input-format&quot;&gt;INPUT FORMAT&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Line 1:&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Three space-separated integers: A, B, N; (1 &amp;lt;= N ≤ 50).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Line 2..end:&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;A sequence of as many as 200,000 characters, all 0 or 1; the characters are presented 80 per line, except potentially the last line.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;sample-input-file-contactin&quot;&gt;SAMPLE INPUT (file contact.in)&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2 4 10
01010010010001000111101100001010011001111000010010011110010000000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In this example, pattern 100 occurs 12 times, and pattern 1000 occurs 5 times. The most frequent pattern is 00, with 23 occurrences.&lt;/p&gt;

&lt;h3 id=&quot;output-format&quot;&gt;OUTPUT FORMAT&lt;/h3&gt;

&lt;p&gt;Lines that list the N highest frequencies (in descending order of frequency) along with the patterns that occur in those frequencies. Order those patterns by shortest-to-longest and increasing binary number for those of the same frequency. If fewer than N highest frequencies are available, print only those that are.&lt;/p&gt;

&lt;p&gt;Print the frequency alone by itself on a line. Then print the actual patterns space separated, six to a line (unless fewer than six remain).&lt;/p&gt;

&lt;h3 id=&quot;sample-output-file-contactout&quot;&gt;SAMPLE OUTPUT (file contact.out)&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;23
00
15
01 10
12
100
11
11 000 001
10
010
8
0100
7
0010 1001
6
111 0000
5
011 110 1000
4
0001 0011 1100
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">The cows have developed a new interest in scanning the universe outside their farm with radiotelescopes. Recently, they noticed a very curious microwave pulsing emission sent right from the centre of the galaxy. They wish to know if the emission is transmitted by some extraterrestrial form of intelligent life or if it is nothing but the usual heartbeat of the stars.</summary></entry><entry><title type="html">Humble Numbers</title><link href="https://matterdark.github.io//usaco/2018/11/06/humble.html" rel="alternate" type="text/html" title="Humble Numbers" /><published>2018-11-06T00:00:00+00:00</published><updated>2018-11-06T00:00:00+00:00</updated><id>https://matterdark.github.io//usaco/2018/11/06/humble</id><content type="html" xml:base="https://matterdark.github.io//usaco/2018/11/06/humble.html">&lt;p&gt;For a given set of K prime numbers S = {p1, p2, …, pK}, consider the set of all numbers whose prime factors are a subset of S. This set contains, for example, p1, p1p2, p1p1, and p1p2p3 (among others). This is the set of ‘humble numbers’ for the input set S. Note: The number 1 is explicitly declared not to be a humble number.&lt;/p&gt;

&lt;p&gt;Your job is to find the Nth humble number for a given set S. Long integers (signed 32-bit) will be adequate for all solutions.&lt;/p&gt;

&lt;h3 id=&quot;program-name-humble&quot;&gt;PROGRAM NAME: humble&lt;/h3&gt;

&lt;h3 id=&quot;input-format&quot;&gt;INPUT FORMAT&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Line 1:&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Two space separated integers: K and N, 1 &amp;lt;= K &amp;lt;=100 and 1 &amp;lt;= N &amp;lt;= 100,000.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Line 2:&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;K space separated positive integers that compose the set S.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;sample-input-file-humblein&quot;&gt;SAMPLE INPUT (file humble.in)&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;4 19
2 3 5 7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;output-format&quot;&gt;OUTPUT FORMAT&lt;/h3&gt;

&lt;p&gt;The Nth humble number from set S printed alone on a line.&lt;/p&gt;

&lt;h3 id=&quot;sample-output-file-humbleout&quot;&gt;SAMPLE OUTPUT (file humble.out)&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;27
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">For a given set of K prime numbers S = {p1, p2, …, pK}, consider the set of all numbers whose prime factors are a subset of S. This set contains, for example, p1, p1p2, p1p1, and p1p2p3 (among others). This is the set of ‘humble numbers’ for the input set S. Note: The number 1 is explicitly declared not to be a humble number.</summary></entry><entry><title type="html">Stamps</title><link href="https://matterdark.github.io//usaco/2018/11/04/stamps.html" rel="alternate" type="text/html" title="Stamps" /><published>2018-11-04T00:00:00+00:00</published><updated>2018-11-04T00:00:00+00:00</updated><id>https://matterdark.github.io//usaco/2018/11/04/stamps</id><content type="html" xml:base="https://matterdark.github.io//usaco/2018/11/04/stamps.html">&lt;p&gt;Given a set of N stamp values (e.g., {1 cent, 3 cents}) and an upper limit K to the number of stamps that can fit on an envelope, calculate the largest unbroken list of postages from 1 cent to M cents that can be created.&lt;/p&gt;

&lt;p&gt;For example, consider stamps whose values are limited to 1 cent and 3 cents; you can use at most 5 stamps. It’s easy to see how to assemble postage of 1 through 5 cents (just use that many 1 cent stamps), and successive values aren’t much harder:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;6 = 3 + 3&lt;/li&gt;
  &lt;li&gt;7 = 3 + 3 + 1&lt;/li&gt;
  &lt;li&gt;8 = 3 + 3 + 1 + 1&lt;/li&gt;
  &lt;li&gt;9 = 3 + 3 + 3&lt;/li&gt;
  &lt;li&gt;10 = 3 + 3 + 3 + 1&lt;/li&gt;
  &lt;li&gt;11 = 3 + 3 + 3 + 1 + 1&lt;/li&gt;
  &lt;li&gt;12 = 3 + 3 + 3 + 3&lt;/li&gt;
  &lt;li&gt;13 = 3 + 3 + 3 + 3 + 1.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;However, there is no way to make 14 cents of postage with 5 or fewer stamps of value 1 and 3 cents. Thus, for this set of two stamp values and a limit of K=5, the answer is M=13.&lt;/p&gt;

&lt;p&gt;The most difficult test case for this problem has a time limit of 3 seconds.&lt;/p&gt;

&lt;h3 id=&quot;program-name-stamps&quot;&gt;PROGRAM NAME: stamps&lt;/h3&gt;

&lt;h3 id=&quot;input-format&quot;&gt;INPUT FORMAT&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Line 1:&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Two integers K and N. K (1 &amp;lt;= K &amp;lt;= 200) is the total number of stamps that can be used. N (1 &amp;lt;= N &amp;lt;= 50) is the number of stamp values.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Line 2..end:&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;N integers, 15 per line, listing all of the N stamp values, each of which will be at most 10000.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;sample-input-file-stampsin&quot;&gt;SAMPLE INPUT (file stamps.in)&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;5 2
1 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;output-format&quot;&gt;OUTPUT FORMAT&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Line 1:&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;One integer, the number of contiguous postage values starting at 1 cent that can be formed using no more than K stamps from the set.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;sample-output-file-stampsout&quot;&gt;SAMPLE OUTPUT (file stamps.out)&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;13
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">Given a set of N stamp values (e.g., {1 cent, 3 cents}) and an upper limit K to the number of stamps that can fit on an envelope, calculate the largest unbroken list of postages from 1 cent to M cents that can be created.</summary></entry><entry><title type="html">Agri-Net</title><link href="https://matterdark.github.io//usaco/2018/11/02/agrinet.html" rel="alternate" type="text/html" title="Agri-Net" /><published>2018-11-02T00:00:00+00:00</published><updated>2018-11-02T00:00:00+00:00</updated><id>https://matterdark.github.io//usaco/2018/11/02/agrinet</id><content type="html" xml:base="https://matterdark.github.io//usaco/2018/11/02/agrinet.html">&lt;p&gt;Farmer John has been elected mayor of his town! One of his campaign promises was to bring internet connectivity to all farms in the area. He needs your help, of course.&lt;/p&gt;

&lt;p&gt;Farmer John ordered a high speed connection for his farm and is going to share his connectivity with the other farmers. To minimize cost, he wants to lay the minimum amount of optical fiber to connect his farm to all the other farms.&lt;/p&gt;

&lt;p&gt;Given a list of how much fiber it takes to connect each pair of farms, you must find the minimum amount of fiber needed to connect them all together. Each farm must connect to some other farm such that a packet can flow from any one farm to any other farm.&lt;/p&gt;

&lt;p&gt;The distance between any two farms will not exceed 100,000.&lt;/p&gt;

&lt;h3 id=&quot;program-name-agrinet&quot;&gt;PROGRAM NAME: agrinet&lt;/h3&gt;

&lt;h3 id=&quot;input-format&quot;&gt;INPUT FORMAT&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Lines 1:&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;The number of farms, N (3 &amp;lt;= N &amp;lt;= 100).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Line 2..end:&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;The subsequent lines contain the N x N connectivity matrix, where each element shows the distance from on farm to another. Logically, they are N lines of N space-separated integers. Physically, they are limited in length to 80 characters, so some lines continue onto others. Of course, the diagonal will be 0, since the distance from farm i to itself is not interesting for this problem.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;sample-input-file-agrinetin&quot;&gt;SAMPLE INPUT (file agrinet.in)&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;4
0 4 9 21
4 0 8 17
9 8 0 16
21 17 16 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;output-format&quot;&gt;OUTPUT FORMAT&lt;/h3&gt;

&lt;p&gt;The single output contains the integer length that is the sum of the minimum length of fiber required to connect the entire set of farms.&lt;/p&gt;

&lt;h3 id=&quot;sample-output-file-agrinetout&quot;&gt;SAMPLE OUTPUT (file agrinet.out)&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;28
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">Farmer John has been elected mayor of his town! One of his campaign promises was to bring internet connectivity to all farms in the area. He needs your help, of course.</summary></entry><entry><title type="html">Fractions to Decimals</title><link href="https://matterdark.github.io//usaco/2018/11/01/fracdec.html" rel="alternate" type="text/html" title="Fractions to Decimals" /><published>2018-11-01T01:00:00+00:00</published><updated>2018-11-01T01:00:00+00:00</updated><id>https://matterdark.github.io//usaco/2018/11/01/fracdec</id><content type="html" xml:base="https://matterdark.github.io//usaco/2018/11/01/fracdec.html">&lt;p&gt;Write a program that will accept a fraction of the form N/D, where N is the numerator and D is the denominator and print the decimal representation. If the decimal representation has a repeating sequence of digits, indicate the sequence by enclosing it in brackets. For example, 1/3 = .33333333…is denoted as 0.(3), and 41/333 = 0.123123123…is denoted as 0.(123). Use xxx.0 to denote an integer. Typical conversions are:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1/3     =  0.(3)
22/5    =  4.4
1/7     =  0.(142857)
2/2     =  1.0
3/8     =  0.375
45/56   =  0.803(571428)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;program-name-fracdec&quot;&gt;PROGRAM NAME: fracdec&lt;/h3&gt;

&lt;h3 id=&quot;input-format&quot;&gt;INPUT FORMAT&lt;/h3&gt;

&lt;p&gt;A single line with two space separated integers, N and D, 1 &amp;lt;= N,D &amp;lt;= 100000.&lt;/p&gt;

&lt;h3 id=&quot;sample-input-file-fracdecin&quot;&gt;SAMPLE INPUT (file fracdec.in)&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;45 56
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;output-format&quot;&gt;OUTPUT FORMAT&lt;/h3&gt;

&lt;p&gt;The decimal expansion, as detailed above. If the expansion exceeds 76 characters in length, print it on multiple lines with 76 characters per line.&lt;/p&gt;

&lt;h3 id=&quot;sample-output-file-fracdecout&quot;&gt;SAMPLE OUTPUT (file fracdec.out)&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;0.803(571428)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">Write a program that will accept a fraction of the form N/D, where N is the numerator and D is the denominator and print the decimal representation. If the decimal representation has a repeating sequence of digits, indicate the sequence by enclosing it in brackets. For example, 1/3 = .33333333…is denoted as 0.(3), and 41/333 = 0.123123123…is denoted as 0.(123). Use xxx.0 to denote an integer. Typical conversions are:</summary></entry><entry><title type="html">Cow Tours</title><link href="https://matterdark.github.io//usaco/2018/11/01/cowtour.html" rel="alternate" type="text/html" title="Cow Tours" /><published>2018-11-01T00:00:00+00:00</published><updated>2018-11-01T00:00:00+00:00</updated><id>https://matterdark.github.io//usaco/2018/11/01/cowtour</id><content type="html" xml:base="https://matterdark.github.io//usaco/2018/11/01/cowtour.html">&lt;p&gt;Farmer John has a number of pastures on his farm. Cow paths connect some pastures with certain other pastures, forming a field. But, at the present time, you can find at least two pastures that cannot be connected by any sequence of cow paths, thus partitioning Farmer John’s farm into multiple fields.&lt;/p&gt;

&lt;p&gt;Farmer John would like add a single a cow path between one pair of pastures using the constraints below.&lt;/p&gt;

&lt;p&gt;A field’s `diameter’ is defined to be the largest distance of all the shortest walks between any pair of pastures in the field. Consider the field below with five pastures, located at the points shown, and cow paths marked by lines:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;         15,15   20,15
           D       E
           *-------*
           |     _/|
           |   _/  |
           | _/    |
           |/      |
  *--------*-------*
  A        B       C
10,10    15,10   20,10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The `diameter’ of this field is approximately 12.07106, since the longest of the set of shortest paths between pairs of pastures is the path from A to E (which includes the point set {A,B,E}). No other pair of pastures in this field is farther apart when connected by an optimal sequence of cow paths.&lt;/p&gt;

&lt;p&gt;Suppose an additional field on the same plane as above is connected by cow paths as follows:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;         *F 30,15
        / 
      _/  
    _/    
   /      
  *------*
  G      H
25,10  30,10
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Given just these two fields on his farm, Farmer John would add a cow path between a point in each of these two fields (namely point sets {A,B,C,D,E} and {F,G,H}) so that the joined set of pastures {A,B,C,D,E,F,G,H} has the smallest possible diameter.&lt;/p&gt;

&lt;p&gt;Note that cow paths do not connect just because they cross each other; they only connect at listed points.&lt;/p&gt;

&lt;p&gt;The input contains the pastures, their locations, and a symmetric “adjacency” matrix that tells whether pastures are connected by cow paths. Pastures are not considered to be connected to themselves. Here’s one annotated adjacency list for the pasture {A,B,C,D,E,F,G,H} as shown above:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  A B C D E F G H
A 0 1 0 0 0 0 0 0
B 1 0 1 1 1 0 0 0
C 0 1 0 0 1 0 0 0
D 0 1 0 0 1 0 0 0
E 0 1 1 1 0 0 0 0
F 0 0 0 0 0 0 1 0
G 0 0 0 0 0 1 0 1
H 0 0 0 0 0 0 1 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Other equivalent adjacency lists might permute the rows and columns by using some order other than alphabetical to show the point connections. The input data contains no names for the points.&lt;/p&gt;

&lt;p&gt;The input will contain at least two pastures that are not connected by any sequence of cow paths.&lt;/p&gt;

&lt;p&gt;Find a way to connect exactly two pastures in the input with a cow path so that the new combined field has the smallest possible diameter of any possible pair of connected pastures. Output that smallest possible diameter.&lt;/p&gt;

&lt;h3 id=&quot;program-name-cowtour&quot;&gt;PROGRAM NAME: cowtour&lt;/h3&gt;

&lt;h3 id=&quot;input-format&quot;&gt;INPUT FORMAT&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Lines 1:&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;An integer, N (1 &amp;lt;= N &amp;lt;= 150), the number of pastures&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Lines 2-N+1:&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Two integers, X and Y (0 &amp;lt;= X ,Y&amp;lt;= 100000), that denote that X,Y grid location of the pastures; all input pastures are unique.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Line N+2-2*N+1:&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;lines, each containing N digits (0 or 1) that represent the adjacency matrix as described above, where the rows’ and columns’ indices are in order of the points just listed.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;sample-input-file-cowtourin&quot;&gt;SAMPLE INPUT (file cowtour.in)&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;8
10 10
15 10
20 10
15 15
20 15
30 15
25 10
30 10
01000000
10111000
01001000
01001000
01110000
00000010
00000101
00000010
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;output-format&quot;&gt;OUTPUT FORMAT&lt;/h3&gt;

&lt;p&gt;The output consists of a single line with the diameter of the newly joined pastures. Print the answer to exactly six decimal places. Do not perform any special rounding on your output.&lt;/p&gt;

&lt;h3 id=&quot;sample-output-file-cowtourout&quot;&gt;SAMPLE OUTPUT (file cowtour.out)&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;22.071068
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;output-explanation&quot;&gt;OUTPUT EXPLANATION&lt;/h3&gt;

&lt;p&gt;After trying all possible connection pairs, connecting C to G yields the minimum diameter.&lt;/p&gt;</content><author><name></name></author><summary type="html">Farmer John has a number of pastures on his farm. Cow paths connect some pastures with certain other pastures, forming a field. But, at the present time, you can find at least two pastures that cannot be connected by any sequence of cow paths, thus partitioning Farmer John’s farm into multiple fields.</summary></entry><entry><title type="html">Bessie Come Home</title><link href="https://matterdark.github.io//usaco/2018/10/28/comehome.html" rel="alternate" type="text/html" title="Bessie Come Home" /><published>2018-10-28T00:00:00+00:00</published><updated>2018-10-28T00:00:00+00:00</updated><id>https://matterdark.github.io//usaco/2018/10/28/comehome</id><content type="html" xml:base="https://matterdark.github.io//usaco/2018/10/28/comehome.html">&lt;p&gt;It’s dinner time, and the cows are out in their separate pastures. Farmer John rings the bell so they will start walking to the barn. Your job is to figure out which one cow gets to the barn first (the supplied test data will always have exactly one fastest cow).&lt;/p&gt;

&lt;p&gt;Between milkings, each cow is located in her own pasture, though some pastures have no cows in them. Each pasture is connected by a path to one or more other pastures (potentially including itself). Sometimes, two (potentially self-same) pastures are connected by more than one path. One or more of the pastures has a path to the barn. Thus, all cows have a path to the barn and they always know the shortest path. Of course, cows can go either direction on a path and they all walk at the same speed.&lt;/p&gt;

&lt;p&gt;The pastures are labeled ‘a’..’z’ and ‘A’..’Y’. One cow is in each pasture labeled with a capital letter. No cow is in a pasture labeled with a lower case letter. The barn’s label is ‘Z’; no cows are in the barn, though.&lt;/p&gt;

&lt;h3 id=&quot;program-name-comehome&quot;&gt;PROGRAM NAME: comehome&lt;/h3&gt;

&lt;h3 id=&quot;input-format&quot;&gt;INPUT FORMAT&lt;/h3&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Lines 1:&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Integer P (1 &amp;lt;= P &amp;lt;= 10000) the number of paths that interconnect the pastures (and the barn)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Lines 2..P+1:&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;Space separated, two letters and an integer: the names of the interconnected pastures/barn and the distance between them (1 &amp;lt;= distance &amp;lt;= 1000)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;sample-input-file-comehomein&quot;&gt;SAMPLE INPUT (file comehome.in)&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;5
A d 6
B d 3
C e 9
d Z 8
e Z 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;output-format&quot;&gt;OUTPUT FORMAT&lt;/h3&gt;

&lt;p&gt;A single line containing two items: the capital letter name of the pasture of the cow that arrives first back at the barn, the length of the path followed by that cow.&lt;/p&gt;

&lt;h3 id=&quot;sample-output-file-comehomeout&quot;&gt;SAMPLE OUTPUT (file comehome.out)&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;B 11
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">It’s dinner time, and the cows are out in their separate pastures. Farmer John rings the bell so they will start walking to the barn. Your job is to figure out which one cow gets to the barn first (the supplied test data will always have exactly one fastest cow).</summary></entry></feed>